{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/jhuapl-bio/taxtriage/main/nextflow_schema.json",
    "title": "nf-core/taxtriage pipeline parameters",
    "description": "APHL pipeline for triage classification reports",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options (Required)",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data samplesheet, database, and save output data.",
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 6 columns in a header row and at least one row for info. See [usage docs](https://raw.githubusercontent.com/jhuapl-bio/taxtriage/main/examples/Samplesheet_git.csv).",
                    "fa_icon": "fas fa-file-csv",
                    "default": "https://raw.githubusercontent.com/jhuapl-bio/taxtriage/main/examples/Samplesheet.csv"
                },
                "db": {
                    "type": "string",
                    "fa_icon": "fas fa-book",
                    "default": "test",
                    "format": "directory-path",
                    "description": "Path to database for Kraken2. If using with --download-db, choose from download options {minikraken2, flukraken2}"
                },
                "metaphlan": {
                    "type": "string",
                    "fa_icon": "fas fa-book",
                    "format": "directory-path",
                    "description": "Path to database for Metaphlan"
                },
                "centrifuge_db": {
                    "type": "string",
                    "fa_icon": "fas fa-book",
                    "format": "directory-path",
                    "description": "Path to database for Centrifuge"
                },
                "outdir": {
                    "type": "string",
                    "description": "Output directory full of files. Report will be generated at <PATH>/multiqc/multiqc_report.html",
                    "fa_icon": "fas fa-file-signature"
                }
            },
            "required": ["input", "db", "outdir"]
        },
        "prelim_and_qc": {
            "title": "Preliminary and QC",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Run general maintenance scripts to prep the data prior to classifications/analysis, inlcuding some plotting",
            "properties": {
                "remove_taxids": {
                    "description": "Taxid numbers in double quotes ( e.g. \"9606\" for human). For multiple, example: \"9606 2\" removes human AND all Bacteria",
                    "fa_icon": "fas fa-file-signature",
                    "type": "string"
                },
                "demux": {
                    "type": "boolean",
                    "description": "Run Demux on a folder of fastq files",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "metagenomics_parameters": {
            "title": "Metagenomics Parameters",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "top_per_taxa": {
                    "type": "string",
                    "description": "Custom downselect of taxid:limit:rank. For example, it would be 10239:4:S to at minimum present the top 4 species of viruses. Add more with a space",
                    "help_text": "Example: 10239:4:S 2:10:S is the top 10 bacteria species, top 4 viral species at minimum are included",
                    "default": "10239:10:S 2:10:S"
                },
                "low_memory": {
                    "type": "boolean",
                    "fa_icon": "fas fa-book",
                    "description": "Dont load db to memory, run from I/O",
                    "default": false
                },
                "download_db": {
                    "type": "boolean",
                    "fa_icon": "fas fa-download",
                    "description": "Download the preset database indicated in --db to --outdir.",
                    "default": true
                },
                "taxtab": {
                    "type": "string",
                    "hint": "Options: [default, krona, or a file path to a taxonomy.tab file]",
                    "default": "default",
                    "format": "file-path",
                    "description": "Taxonomy tab file for krona plots",
                    "fa_icon": "fas fa-file-signature"
                },
                "taxdump": {
                    "type": "string",
                    "format": "file-path",
                    "hint": "Path to a directory that contains ncbi taxonomy dmp files (names.dmp, nodes.dmp)",
                    "description": "",
                    "fa_icon": "fas fa-file-signature"
                },
                "save_reads_assignment": {
                    "type": "boolean",
                    "description": "Report output",
                    "default": true
                },
                "save_output_fastqs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-book",
                    "description": "Save all read classifications as a txt file",
                    "default": true
                },
                "top_hits_count": {
                    "type": "number",
                    "default": 20,
                    "description": "Top N organisms to report per sample",
                    "fa_icon": "fas fa-file-signature"
                },
                "k2_confidence": {
                    "type": "number",
                    "description": "Kraken2 confidence, default (empty) is 0.0. Must be between 0 and 1",
                    "fa_icon": "fas fa-file-signature"
                },
                "k2_minimum_hit_groups": {
                    "type": "number",
                    "description": "Kraken2 minimum hit groups for LCA to be called",
                    "fa_icon": "fas fa-file-signature"
                },
                "filter": {
                    "type": "string",
                    "format": "directory-path",
                    "schema": "assets/schema_input.json",
                    "description": "Path to a kraken2 database. Typically, this would be the human reads database for human-derived samples. Deprecated! Choose --remove_taxids insteads",
                    "help_text": "",
                    "fa_icon": "fas fa-file-csv"
                }
            }
        },
        "alignment_parameters": {
            "title": "Alignment",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Alignment Parameter adjustments",
            "properties": {
                "remove_reference_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Local FASTA file to remove host reads from your files. Used prior to kraken2.",
                    "fa_icon": "fas fa-file-signature"

                },
                "use_bt2": {
                    "type": "boolean",
                    "description": "Dont use minimap2 for short reads, use bowtie2 instead",
                    "fa_icon": "fas fa-file-signature"
                },
                "skip_realignment": {
                    "type": "boolean",
                    "description": "Dont do re-alignment post kraken2 classification",
                    "fa_icon": "fas fa-file-signature"
                },
                "skip_confidence": {
                    "type": "boolean",
                    "description": "Dont do confidence metrics post-alignment",
                    "fa_icon": "fas fa-file-signature"
                },
                "assembly": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "description": "Path to an assembly file. This contains the taxid and relative genome file that can be pulled from Entrez (ncbi). If not called, it auto downloads in the pipeline and requires internet connectivity",
                    "help_text": "",
                    "fa_icon": "fas fa-file-csv"
                },
                "get_pathogens": {
                    "type": "boolean",
                    "schema": "assets/schema_input.json",
                    "description": "Pull remote pathogens reference file from GH",
                    "help_text": "Available at: https://github.com/jhuapl-bio/datasets/raw/main/references/pathogens.fasta.gz",
                    "fa_icon": "fas fa-file-csv"
                },
                "pathogens": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "description": "Path to pathogens txt file. See documentation for format and info.",
                    "fa_icon": "fas fa-file-csv"
                },
                "organisms": {
                    "type": "string",
                    "hint": "Options: Comma-separated taxids or organism names to match to ncbi assembly info. See --assembly for more info. If using organism names, make sure to set it to fuzzy-matching with --fuzzy ",
                    "description": "Either a string of taxids separated by a space, or organisms names with '' enclosure, separated by space for each enclosed name with ''",
                    "fa_icon": "fas fa-file-signature"
                },
                "organisms_file": {
                    "type": "string",
                    "format": "file-path",
                    "hint": "Options: [string or single column list of taxids or organism names]. If using organism names, make sure to set it to fuzzy-matching with --fuzzy ",
                    "description": "Either a file or string of taxids separated by a space, or organisms names with '' enclosure",
                    "fa_icon": "fas fa-file-signature"
                },
                "fuzzy": {
                    "type": "boolean",
                    "description": "Fuzzy matching for organism names",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "min_reads_align": {
                    "type": "number",
                    "default": 3,
                    "description": "Minimum reads threshold for realignment",
                    "fa_icon": "fas fa-file-signature"
                },
                "zscore_accepted": {
                    "type": "number",
                    "default": 1.5,
                    "hint": "This is the value (minimum) accepted when calculating distribution filtering from HHS data for a given sample type match. Value is + and -",
                    "description": "Minimum zscore for outline assumptions from HHS",
                    "fa_icon": "fas fa-file-signature"
                },
                "minmapq": {
                    "type": "number",
                    "default": 5,
                    "description": "Minimum MapQ Score for alignment",
                    "fa_icon": "fas fa-file-signature"
                },

                "bt2_indices": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to Bowtie2 indices (directory). If not called, it auto creates it from the relevant FASTA file for each sample. Only usable with --reference_fasta",
                    "fa_icon": "fas fa-file-signature"
                },
                "bt2_scoremin": {
                    "type": "string",
                    "description": "Bowtie2 score-min parameter",
                    "fa_icon": "fas fa-file-signature"
                },
                "refresh_download": {
                    "type": "boolean",
                    "description": "Redownload all references from NCBI",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "hidden": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "assembly_file_type": {
                    "type": "string",
                    "description": "Assembly text file format. Can be a kraken2 fasta (kraken2) or the one pulled from ncbi (ncbi)",
                    "fa_icon": "fas fa-folder-open",
                    "enum": ["kraken2", "ncbi"],
                    "default": "ncbi"
                },
                "reference_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "description": "Reference FASTA file to use instead of using ncbi API to pull genomes. Useful for offlined pipelines",
                    "help_text": "",
                    "fa_icon": "fas fa-file-csv"
                },
                "distributions": {
                    "type": "string",
                    "format": "file-path",
                    "schema": "assets/schema_input.json",
                    "description": "List of all metagenome distributions that contain abundances found in public HMP data for each taxa and body site combination",
                    "help_text": "",
                    "default":  "https://raw.githubusercontent.com/jhuapl-bio/taxtriage/main/assets/taxid_abundance_stats.hmp.tsv.gz",
                    "fa_icon": "fas fa-file-csv"
                }
            }
        },
        "skips": {
            "title": "Skip Steps",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Not all steps are required to make a report, choose what to skip upfront. Be aware some analysis plots will be missing depending on what you skip.",
            "properties": {
                "skip_plots": {
                    "type": "boolean",
                    "description": "Skip upfront QC plotting to save time",
                    "fa_icon": "fas fa-file-signature"
                },
                "skip_stats": {
                    "type": "boolean",
                    "description": "Skip generating stats for each individual taxa per sample",
                    "fa_icon": "fas fa-file-signature"
                },
                "skip_fastp": {
                    "type": "boolean",
                    "description": "Skip QC trimming",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "skip_kraken2": {
                    "type": "boolean",
                    "description": "Skip Kraken2. Will not work with \"unknown taxa\" mode. You must provide a reference FASTA if this is toggled on.",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "skip_krona": {
                    "type": "boolean",
                    "description": "Skip Krona Plots",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "skip_classified_fastqs": {
                    "type": "boolean",
                    "description": "Skip saving classified fastqs",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "unknown_sample": {
                    "type": "boolean",
                    "description": "Dont consider HMP distributions",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "denovo_assembly": {
                    "type": "boolean",
                    "description": "Perform De Novo Assembly",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "reference_assembly": {
                    "type": "boolean",
                    "description": "Perform Reference-Based Assembly. Performs variant analysis by default (mandatory)",
                    "fa_icon": "fas fa-file-signature",
                    "default": false
                },
                "get_features": {
                    "type": "boolean",
                    "description": "Start generating annotations from alignments that take place. Requires LOTS of RAM for large data files/genomes",
                    "fa_icon": "fas fa-file-signature"
                },
                "get_variants": {
                    "type": "boolean",
                    "description": "Start generating variant call analysis relative to aligned reads to references",
                    "fa_icon": "fas fa-file-signature"
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "description": "Skip upfront QC plotting to save time",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "general": {
            "title": "General Info",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "blastdb": {
                    "type": "string",
                    "description": "Blast Database (local or remote, local must be absolute path)",
                    "fa_icon": "fas fa-file-signature"
                },
                "remoteblast": {
                    "type": "boolean",
                    "description": "Run BLAST remote",
                    "fa_icon": "fas fa-file-signature"
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Config file for multiqc",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        }
    ]
}
